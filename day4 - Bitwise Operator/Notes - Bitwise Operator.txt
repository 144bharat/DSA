OR(|) Operator:-

A   B       ANS
1   0   ->  1
0   1   ->  1
1   1   ->  1
0   0   ->  0


AND(&) Operator:-

A   B       ANS
1   0   ->  0
0   1   ->  0
1   1   ->  1
0   0   ->  0

NOT(~) Operator:-

a = 2
2 -> 01(IN BITs)
but we know that int (a = 2) is of type INT(4 Bytes)

so actually the 2 is represented as 000000000....0000 01
now finally to get the (NOT of 2):-


NOT OF 000000000000.....00000 01 -> 11111111111.....1111 10

Now to PRINT the Value of ~a(0000000000.....0000 01) ->

one's complement of 11111111111.....1111 10 (~a) :-

000000000.....00000 01

then two's complement :-

000000000.....00000 01
                    +1

000000000.....00000 11 -> 3

the answer is 3 but at first the NOT of a (111111111.....1111 10) starts with one(1) thats why it will print with -ve(NEGATIVE) sign.

XOR(^) Operator:-

A   B       ANS
0   1   ->  1
1   0   ->  1
1   1   ->  0
0   0   ->  0

ONLY TRUE(1) in case (0  1) or  (1  0) means that anyone among two should be 1 else return 0.
